# Sheduling, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/scheduled-triggers?view=azure-devops&tabs=yaml#example-nightly-build-with-different-frequencies
# Disable other triggers
pr: none
trigger: none

# Set schedule
schedules:
- cron: "0 3 * * 1-5"
  displayName: M-F 3:00 AM (UTC) daily build
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'
variables:
  buildConfiguration: 'Release'

steps:
# Prepare SonarCloud
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'fredrikmjohansson'
    scannerMode: 'MSBuild'
    projectKey: 'FredrikJ365_JustSomeService'
    projectName: 'JustSomeService'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/*.dll
      sonar.branch.name=$(Build.SourceBranchName)
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

# Build it
- script: dotnet build src/src.csproj --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

# Test it and collect coverage
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*test/srcTest/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
    nobuild: true
  displayName: Run Tests

  # Set up test reporting on Linux
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool

- script: ./reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.opencover.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create reports

# Publish code coverage
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

# Run SonarCloud
- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'